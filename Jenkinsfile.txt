pipeline {
    agent any
    
    stages {
        stage('Build') {
            steps {
                script {
                    echo '=== Stage 1: Build ==='
                    echo 'Building the code using Maven...'
                }
            }
        }
        
        stage('Unit and Integration Tests') {
            steps {
                script {
                    echo '=== Stage 2: Unit and Integration Tests ==='
                    echo 'Running unit tests...'
                    echo 'Running integration tests...'
                }
            }
        }
        
        stage('Code Analysis') {
            steps {
                script {
                    echo '=== Stage 3: Code Analysis ==='
                    echo 'Running code analysis using SonarQube...'
                }
            }
        }
        
        stage('Security Scan') {
            steps {
                script {
                    echo '=== Stage 4: Security Scan ==='
                    echo 'Performing security scan using OWASP Dependency-Check...'
                }
            }
        }
        
        stage('Deploy to Staging') {
            steps {
                script {
                    echo '=== Stage 5: Deploy to Staging ==='
                    echo 'Deploying the application to a staging server...'
                }
            }
        }
        
        stage('Integration Tests on Staging') {
            steps {
                script {
                    echo '=== Stage 6: Integration Tests on Staging ==='
                    echo 'Running integration tests on staging environment...'
                }
            }
        }
        
        stage('Deploy to Production') {
            steps {
                script {
                    echo '=== Stage 7: Deploy to Production ==='
                    echo 'Deploying the application to a production server...'
                }
            }
        }
    }
    
    post {
        always {
            emailext body: "Pipeline ${currentBuild.result}: ${currentBuild.currentResult}", 
                     subject: "Pipeline ${currentBuild.result}", 
                     to: 'anandchowdary521@gmail.com', 
                     attachLog: true
        }
    }
}
